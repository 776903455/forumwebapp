<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
    
    xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd
      http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx.xsd
   
     ">
     
    
     <!--配置数据库连接池  -->
     <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
     	<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
     	<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/it_study"></property>
     	<property name="user" value="root"></property>
     	<property name="password" value="root"></property>
     </bean>
     
     <!--配置sqlsessionFactory -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!--配置数据源  -->
			<property name="dataSource" ref="dataSource"></property>
			<property name="configLocation" value="classpath:mybatis.xml"></property>
			<!--配置mybatis，mapper文件的位置  -->
			<property name="mapperLocations" value="classpath:mapper/*xml"></property>
		</bean> 
		
		
		
	<!--批量创建mapper的bean对象
  4   内部会扫描指定包下的mapper，创建代理对象  名字就是类名头字母改小-->
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     <!--扫描dao接口的实训，加入到ioc容器中  -->
      <property name="basePackage" value="com.lyh.itstudy.dao"></property>
     <!--  <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property> -->
     </bean>


	<!--配置quratz定时器-->
	<bean id="myJob" class="com.lyh.itstudy.quartzjob.UserQuartz"></bean>

	<!-- jobDetail -->
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="myJob"></property>
		<property name="targetMethod" value="execute"></property>
		<property name="concurrent" value="false" /><!-- 作业不并发调度 -->
	</bean>


	<!-- 定义trigger 触发器 -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetail"></property>
		<property name="cronExpression" value="59 59 23 * * ?"></property>
	</bean>



	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTrigger"/>

			</list>
		</property>
	</bean>
     
         
    <!--5：自动扫描指定包下的注解  -->
  <context:component-scan base-package="com.lyh.itstudy"/>
  
  
  <!--事务配置  -->
  
  <!--6:配置事务管理器  -->  
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  	<property name="dataSource" ref="dataSource"></property>
  </bean>

  <!--开启事务注解  -->
  <tx:annotation-driven></tx:annotation-driven>
  
  <!--使用xml配置形式的事务  -->
  <aop:config>
  	 	<!--切入点表达式  -->
  	 	
  	 	<aop:pointcut expression="execution(* com.lyh.itstudy.service..*(..))" id="txPoint"></aop:pointcut>
  	 	<!--配置事务增强  -->
  	 	<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"></aop:advisor>
  </aop:config>
  
  <!-- 配置事务增强，事务如何切入 -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
  		<tx:attributes>
  			<!--所有方式都是事务  -->
  			<tx:method name="*"/>
  			<!--以get开始的所有方法  -->
  			<tx:method name="get*" read-only="true"/>
  		</tx:attributes>
  
  </tx:advice>

  </beans>